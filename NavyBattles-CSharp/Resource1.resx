<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bombed" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        +YT/K2i0vwEO8ulpY5prYwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="missed" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>